// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: messages.proto
//
// For information on using the generated types, please see the documenation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

struct ZilliqaMessage_ByteArray {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var data: Data {
    get {return _data ?? SwiftProtobuf.Internal.emptyData}
    set {_data = newValue}
  }
  /// Returns true if `data` has been explicitly set.
  var hasData: Bool {return self._data != nil}
  /// Clears the value of `data`. Subsequent reads from it will return its default value.
  mutating func clearData() {self._data = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _data: Data? = nil
}

struct ZilliqaMessage_ProtoTransactionCoreInfo {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var version: UInt32 {
    get {return _storage._version ?? 0}
    set {_uniqueStorage()._version = newValue}
  }
  /// Returns true if `version` has been explicitly set.
  var hasVersion: Bool {return _storage._version != nil}
  /// Clears the value of `version`. Subsequent reads from it will return its default value.
  mutating func clearVersion() {_uniqueStorage()._version = nil}

  var nonce: UInt64 {
    get {return _storage._nonce ?? 0}
    set {_uniqueStorage()._nonce = newValue}
  }
  /// Returns true if `nonce` has been explicitly set.
  var hasNonce: Bool {return _storage._nonce != nil}
  /// Clears the value of `nonce`. Subsequent reads from it will return its default value.
  mutating func clearNonce() {_uniqueStorage()._nonce = nil}

  var toaddr: Data {
    get {return _storage._toaddr ?? SwiftProtobuf.Internal.emptyData}
    set {_uniqueStorage()._toaddr = newValue}
  }
  /// Returns true if `toaddr` has been explicitly set.
  var hasToaddr: Bool {return _storage._toaddr != nil}
  /// Clears the value of `toaddr`. Subsequent reads from it will return its default value.
  mutating func clearToaddr() {_uniqueStorage()._toaddr = nil}

  var senderpubkey: ZilliqaMessage_ByteArray {
    get {return _storage._senderpubkey ?? ZilliqaMessage_ByteArray()}
    set {_uniqueStorage()._senderpubkey = newValue}
  }
  /// Returns true if `senderpubkey` has been explicitly set.
  var hasSenderpubkey: Bool {return _storage._senderpubkey != nil}
  /// Clears the value of `senderpubkey`. Subsequent reads from it will return its default value.
  mutating func clearSenderpubkey() {_uniqueStorage()._senderpubkey = nil}

  var amount: ZilliqaMessage_ByteArray {
    get {return _storage._amount ?? ZilliqaMessage_ByteArray()}
    set {_uniqueStorage()._amount = newValue}
  }
  /// Returns true if `amount` has been explicitly set.
  var hasAmount: Bool {return _storage._amount != nil}
  /// Clears the value of `amount`. Subsequent reads from it will return its default value.
  mutating func clearAmount() {_uniqueStorage()._amount = nil}

  var gasprice: ZilliqaMessage_ByteArray {
    get {return _storage._gasprice ?? ZilliqaMessage_ByteArray()}
    set {_uniqueStorage()._gasprice = newValue}
  }
  /// Returns true if `gasprice` has been explicitly set.
  var hasGasprice: Bool {return _storage._gasprice != nil}
  /// Clears the value of `gasprice`. Subsequent reads from it will return its default value.
  mutating func clearGasprice() {_uniqueStorage()._gasprice = nil}

  var gaslimit: UInt64 {
    get {return _storage._gaslimit ?? 0}
    set {_uniqueStorage()._gaslimit = newValue}
  }
  /// Returns true if `gaslimit` has been explicitly set.
  var hasGaslimit: Bool {return _storage._gaslimit != nil}
  /// Clears the value of `gaslimit`. Subsequent reads from it will return its default value.
  mutating func clearGaslimit() {_uniqueStorage()._gaslimit = nil}

  var code: Data {
    get {return _storage._code ?? SwiftProtobuf.Internal.emptyData}
    set {_uniqueStorage()._code = newValue}
  }
  /// Returns true if `code` has been explicitly set.
  var hasCode: Bool {return _storage._code != nil}
  /// Clears the value of `code`. Subsequent reads from it will return its default value.
  mutating func clearCode() {_uniqueStorage()._code = nil}

  var data: Data {
    get {return _storage._data ?? SwiftProtobuf.Internal.emptyData}
    set {_uniqueStorage()._data = newValue}
  }
  /// Returns true if `data` has been explicitly set.
  var hasData: Bool {return _storage._data != nil}
  /// Clears the value of `data`. Subsequent reads from it will return its default value.
  mutating func clearData() {_uniqueStorage()._data = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

struct ZilliqaMessage_ProtoTransaction {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var tranid: Data {
    get {return _storage._tranid ?? SwiftProtobuf.Internal.emptyData}
    set {_uniqueStorage()._tranid = newValue}
  }
  /// Returns true if `tranid` has been explicitly set.
  var hasTranid: Bool {return _storage._tranid != nil}
  /// Clears the value of `tranid`. Subsequent reads from it will return its default value.
  mutating func clearTranid() {_uniqueStorage()._tranid = nil}

  var info: ZilliqaMessage_ProtoTransactionCoreInfo {
    get {return _storage._info ?? ZilliqaMessage_ProtoTransactionCoreInfo()}
    set {_uniqueStorage()._info = newValue}
  }
  /// Returns true if `info` has been explicitly set.
  var hasInfo: Bool {return _storage._info != nil}
  /// Clears the value of `info`. Subsequent reads from it will return its default value.
  mutating func clearInfo() {_uniqueStorage()._info = nil}

  var signature: ZilliqaMessage_ByteArray {
    get {return _storage._signature ?? ZilliqaMessage_ByteArray()}
    set {_uniqueStorage()._signature = newValue}
  }
  /// Returns true if `signature` has been explicitly set.
  var hasSignature: Bool {return _storage._signature != nil}
  /// Clears the value of `signature`. Subsequent reads from it will return its default value.
  mutating func clearSignature() {_uniqueStorage()._signature = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

struct ZilliqaMessage_ProtoTransactionReceipt {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var receipt: Data {
    get {return _receipt ?? SwiftProtobuf.Internal.emptyData}
    set {_receipt = newValue}
  }
  /// Returns true if `receipt` has been explicitly set.
  var hasReceipt: Bool {return self._receipt != nil}
  /// Clears the value of `receipt`. Subsequent reads from it will return its default value.
  mutating func clearReceipt() {self._receipt = nil}

  var cumgas: UInt64 {
    get {return _cumgas ?? 0}
    set {_cumgas = newValue}
  }
  /// Returns true if `cumgas` has been explicitly set.
  var hasCumgas: Bool {return self._cumgas != nil}
  /// Clears the value of `cumgas`. Subsequent reads from it will return its default value.
  mutating func clearCumgas() {self._cumgas = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _receipt: Data? = nil
  fileprivate var _cumgas: UInt64? = nil
}

struct ZilliqaMessage_ProtoTransactionWithReceipt {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  var transaction: ZilliqaMessage_ProtoTransaction {
    get {return _storage._transaction ?? ZilliqaMessage_ProtoTransaction()}
    set {_uniqueStorage()._transaction = newValue}
  }
  /// Returns true if `transaction` has been explicitly set.
  var hasTransaction: Bool {return _storage._transaction != nil}
  /// Clears the value of `transaction`. Subsequent reads from it will return its default value.
  mutating func clearTransaction() {_uniqueStorage()._transaction = nil}

  var receipt: ZilliqaMessage_ProtoTransactionReceipt {
    get {return _storage._receipt ?? ZilliqaMessage_ProtoTransactionReceipt()}
    set {_uniqueStorage()._receipt = newValue}
  }
  /// Returns true if `receipt` has been explicitly set.
  var hasReceipt: Bool {return _storage._receipt != nil}
  /// Clears the value of `receipt`. Subsequent reads from it will return its default value.
  mutating func clearReceipt() {_uniqueStorage()._receipt = nil}

  var unknownFields = SwiftProtobuf.UnknownStorage()

  init() {}

  fileprivate var _storage = _StorageClass.defaultInstance
}

// MARK: - Code below here is support for the SwiftProtobuf runtime.

fileprivate let _protobuf_package = "ZilliqaMessage"

extension ZilliqaMessage_ByteArray: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ByteArray"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "data"),
  ]

  public var isInitialized: Bool {
    if self._data == nil {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularBytesField(value: &self._data)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._data {
      try visitor.visitSingularBytesField(value: v, fieldNumber: 1)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: ZilliqaMessage_ByteArray, rhs: ZilliqaMessage_ByteArray) -> Bool {
    if lhs._data != rhs._data {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension ZilliqaMessage_ProtoTransactionCoreInfo: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ProtoTransactionCoreInfo"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "version"),
    2: .same(proto: "nonce"),
    3: .same(proto: "toaddr"),
    4: .same(proto: "senderpubkey"),
    5: .same(proto: "amount"),
    6: .same(proto: "gasprice"),
    7: .same(proto: "gaslimit"),
    8: .same(proto: "code"),
    9: .same(proto: "data"),
  ]

  fileprivate class _StorageClass {
    var _version: UInt32? = nil
    var _nonce: UInt64? = nil
    var _toaddr: Data? = nil
    var _senderpubkey: ZilliqaMessage_ByteArray? = nil
    var _amount: ZilliqaMessage_ByteArray? = nil
    var _gasprice: ZilliqaMessage_ByteArray? = nil
    var _gaslimit: UInt64? = nil
    var _code: Data? = nil
    var _data: Data? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _version = source._version
      _nonce = source._nonce
      _toaddr = source._toaddr
      _senderpubkey = source._senderpubkey
      _amount = source._amount
      _gasprice = source._gasprice
      _gaslimit = source._gaslimit
      _code = source._code
      _data = source._data
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if _storage._version == nil {return false}
      if _storage._nonce == nil {return false}
      if _storage._toaddr == nil {return false}
      if _storage._senderpubkey == nil {return false}
      if _storage._amount == nil {return false}
      if _storage._gasprice == nil {return false}
      if _storage._gaslimit == nil {return false}
      if _storage._code == nil {return false}
      if _storage._data == nil {return false}
      if let v = _storage._senderpubkey, !v.isInitialized {return false}
      if let v = _storage._amount, !v.isInitialized {return false}
      if let v = _storage._gasprice, !v.isInitialized {return false}
      return true
    }
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularUInt32Field(value: &_storage._version)
        case 2: try decoder.decodeSingularUInt64Field(value: &_storage._nonce)
        case 3: try decoder.decodeSingularBytesField(value: &_storage._toaddr)
        case 4: try decoder.decodeSingularMessageField(value: &_storage._senderpubkey)
        case 5: try decoder.decodeSingularMessageField(value: &_storage._amount)
        case 6: try decoder.decodeSingularMessageField(value: &_storage._gasprice)
        case 7: try decoder.decodeSingularUInt64Field(value: &_storage._gaslimit)
        case 8: try decoder.decodeSingularBytesField(value: &_storage._code)
        case 9: try decoder.decodeSingularBytesField(value: &_storage._data)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._version {
        try visitor.visitSingularUInt32Field(value: v, fieldNumber: 1)
      }
      if let v = _storage._nonce {
        try visitor.visitSingularUInt64Field(value: v, fieldNumber: 2)
      }
      if let v = _storage._toaddr {
        try visitor.visitSingularBytesField(value: v, fieldNumber: 3)
      }
      if let v = _storage._senderpubkey {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
      }
      if let v = _storage._amount {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 5)
      }
      if let v = _storage._gasprice {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 6)
      }
      if let v = _storage._gaslimit {
        try visitor.visitSingularUInt64Field(value: v, fieldNumber: 7)
      }
      if let v = _storage._code {
        try visitor.visitSingularBytesField(value: v, fieldNumber: 8)
      }
      if let v = _storage._data {
        try visitor.visitSingularBytesField(value: v, fieldNumber: 9)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: ZilliqaMessage_ProtoTransactionCoreInfo, rhs: ZilliqaMessage_ProtoTransactionCoreInfo) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._version != rhs_storage._version {return false}
        if _storage._nonce != rhs_storage._nonce {return false}
        if _storage._toaddr != rhs_storage._toaddr {return false}
        if _storage._senderpubkey != rhs_storage._senderpubkey {return false}
        if _storage._amount != rhs_storage._amount {return false}
        if _storage._gasprice != rhs_storage._gasprice {return false}
        if _storage._gaslimit != rhs_storage._gaslimit {return false}
        if _storage._code != rhs_storage._code {return false}
        if _storage._data != rhs_storage._data {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension ZilliqaMessage_ProtoTransaction: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ProtoTransaction"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "tranid"),
    2: .same(proto: "info"),
    3: .same(proto: "signature"),
  ]

  fileprivate class _StorageClass {
    var _tranid: Data? = nil
    var _info: ZilliqaMessage_ProtoTransactionCoreInfo? = nil
    var _signature: ZilliqaMessage_ByteArray? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _tranid = source._tranid
      _info = source._info
      _signature = source._signature
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if _storage._tranid == nil {return false}
      if _storage._info == nil {return false}
      if _storage._signature == nil {return false}
      if let v = _storage._info, !v.isInitialized {return false}
      if let v = _storage._signature, !v.isInitialized {return false}
      return true
    }
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularBytesField(value: &_storage._tranid)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._info)
        case 3: try decoder.decodeSingularMessageField(value: &_storage._signature)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._tranid {
        try visitor.visitSingularBytesField(value: v, fieldNumber: 1)
      }
      if let v = _storage._info {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
      if let v = _storage._signature {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: ZilliqaMessage_ProtoTransaction, rhs: ZilliqaMessage_ProtoTransaction) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._tranid != rhs_storage._tranid {return false}
        if _storage._info != rhs_storage._info {return false}
        if _storage._signature != rhs_storage._signature {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension ZilliqaMessage_ProtoTransactionReceipt: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ProtoTransactionReceipt"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "receipt"),
    2: .same(proto: "cumgas"),
  ]

  public var isInitialized: Bool {
    if self._receipt == nil {return false}
    if self._cumgas == nil {return false}
    return true
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      switch fieldNumber {
      case 1: try decoder.decodeSingularBytesField(value: &self._receipt)
      case 2: try decoder.decodeSingularUInt64Field(value: &self._cumgas)
      default: break
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._receipt {
      try visitor.visitSingularBytesField(value: v, fieldNumber: 1)
    }
    if let v = self._cumgas {
      try visitor.visitSingularUInt64Field(value: v, fieldNumber: 2)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: ZilliqaMessage_ProtoTransactionReceipt, rhs: ZilliqaMessage_ProtoTransactionReceipt) -> Bool {
    if lhs._receipt != rhs._receipt {return false}
    if lhs._cumgas != rhs._cumgas {return false}
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}

extension ZilliqaMessage_ProtoTransactionWithReceipt: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  static let protoMessageName: String = _protobuf_package + ".ProtoTransactionWithReceipt"
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "transaction"),
    2: .same(proto: "receipt"),
  ]

  fileprivate class _StorageClass {
    var _transaction: ZilliqaMessage_ProtoTransaction? = nil
    var _receipt: ZilliqaMessage_ProtoTransactionReceipt? = nil

    static let defaultInstance = _StorageClass()

    private init() {}

    init(copying source: _StorageClass) {
      _transaction = source._transaction
      _receipt = source._receipt
    }
  }

  fileprivate mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _StorageClass(copying: _storage)
    }
    return _storage
  }

  public var isInitialized: Bool {
    return withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if _storage._transaction == nil {return false}
      if _storage._receipt == nil {return false}
      if let v = _storage._transaction, !v.isInitialized {return false}
      if let v = _storage._receipt, !v.isInitialized {return false}
      return true
    }
  }

  mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    _ = _uniqueStorage()
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      while let fieldNumber = try decoder.nextFieldNumber() {
        switch fieldNumber {
        case 1: try decoder.decodeSingularMessageField(value: &_storage._transaction)
        case 2: try decoder.decodeSingularMessageField(value: &_storage._receipt)
        default: break
        }
      }
    }
  }

  func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    try withExtendedLifetime(_storage) { (_storage: _StorageClass) in
      if let v = _storage._transaction {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
      }
      if let v = _storage._receipt {
        try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
      }
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  static func ==(lhs: ZilliqaMessage_ProtoTransactionWithReceipt, rhs: ZilliqaMessage_ProtoTransactionWithReceipt) -> Bool {
    if lhs._storage !== rhs._storage {
      let storagesAreEqual: Bool = withExtendedLifetime((lhs._storage, rhs._storage)) { (_args: (_StorageClass, _StorageClass)) in
        let _storage = _args.0
        let rhs_storage = _args.1
        if _storage._transaction != rhs_storage._transaction {return false}
        if _storage._receipt != rhs_storage._receipt {return false}
        return true
      }
      if !storagesAreEqual {return false}
    }
    if lhs.unknownFields != rhs.unknownFields {return false}
    return true
  }
}
